<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ac.kr.inhatc.spring.Mapper.PointMapper">

    <!-- 회원정보 수정란의 가용포인트(합계) 조회하기위한 Query -->
    <!-- 세션의 ID 값 또는 파라미터로 넘겨받은 ID 값으로 조회 -->
    <select id="TotalPoint" parameterType="String" resultType="int">
        SELECT SUM(POINT) FROM POINT WHERE ID = #{id};
    </select>

    <!-- 회원가입 축하 포인트 지급 및 중복방지를 위한 Query -->
    <insert id="JoinPoint" parameterType="ac.kr.inhatc.spring.DTO.PointDTO">
        INSERT INTO POINT (ID, NAME, PHONE, POINT, DESCRIPTION, TYPE, SAVE_DATE, EXPIRE_DATE)
        SELECT #{id}, #{name}, #{phone}, #{point}, #{description}, #{type}, CURDATE(), CURDATE() + INTERVAL 1 YEAR FROM DUAL
        WHERE NOT EXISTS (
            SELECT ID, TYPE FROM POINT WHERE ID = #{id} and TYPE = #{type}
            )
    </insert>

    <!-- 이메일 수신동의 포인트 지급 및 중복방지를 위한 Query -->
    <insert id="EmailPoint" parameterType="ac.kr.inhatc.spring.DTO.PointDTO">
        INSERT INTO POINT (ID, NAME, PHONE, POINT, DESCRIPTION, TYPE, SAVE_DATE, EXPIRE_DATE)
        SELECT #{id}, #{name}, #{phone}, #{point}, #{description}, #{type}, CURDATE(), CURDATE() + INTERVAL 1 YEAR FROM DUAL
        WHERE NOT EXISTS (
            SELECT ID, TYPE FROM POINT WHERE ID = #{id} and TYPE = #{type}
            )
    </insert>

    <!-- SMS 수신동의 포인트 지급 및 중복방지를 위한 Query -->
    <insert id="SMSPoint" parameterType="ac.kr.inhatc.spring.DTO.PointDTO">
        INSERT INTO POINT (ID, NAME, PHONE, POINT, DESCRIPTION, TYPE, SAVE_DATE, EXPIRE_DATE)
        SELECT #{id}, #{name}, #{phone}, #{point}, #{description}, #{type}, CURDATE(), CURDATE() + INTERVAL 1 YEAR FROM DUAL
        WHERE NOT EXISTS (
            SELECT ID, TYPE FROM POINT WHERE ID = #{id} and TYPE = #{type}
            )
    </insert>

    <!-- 회원탈퇴 처리 시, POINT 테이블에 존재하는 해당 ID의 값을 가진 데이터를 모두 삭제하는 Query -->
    <delete id="processDeleteMember" parameterType="String">
        DELETE FROM POINT WHERE ID = #{id};
    </delete>

    <!-- 포인트 상세내역 조회를 위한 Query -->
    <!-- 세션의 ID 값 또는 파라미터로 넘겨받은 ID 값으로 조회 -->
    <select id="PointList" parameterType="String" resultType="hashmap">
        SELECT * FROM POINT WHERE ID = #{id};
    </select>

    <!-- 포인트 적립 순위 조회를 위한 Query (내림차순 정렬) -->
    <select id="PointRanking" resultType="hashmap">
        SELECT ID, NAME, PHONE, SUM(POINT) as 'TOTAL', RANK() OVER(ORDER BY SUM(POINT) DESC) as 'point_rank' FROM POINT GROUP BY ID, NAME, PHONE ORDER BY TOTAL DESC
    </select>

    <!-- 출석 포인트를 지급하는 Query -->
    <insert id="attendPoint" parameterType="String">
        INSERT INTO POINT (ID, POINT, TYPE, DESCRIPTION, SAVE_DATE, EXPIRE_DATE) VALUES (#{id}, 1000, 'ATTEND', '출석체크 포인트 지급' ,CURDATE(), CURDATE() + INTERVAL 1 YEAR);
        UPDATE POINT X INNER JOIN MEMBER Y ON X.ID = Y.ID
            SET X.NAME = Y.NAME WHERE Y.ID = #{id};
        UPDATE POINT X INNER JOIN MEMBER Y ON X.ID = Y.ID
            SET X.PHONE = Y.PHONE WHERE Y.ID = #{id};
    </insert>

    <!-- 당일 출석여부를 판단하는 Query -->
    <select id="CheckAttend" parameterType="String" resultType="int">
        SELECT COUNT(ID) FROM ATTENDANCE WHERE ID = #{id} and ATT_DATE BETWEEN DATE_ADD(NOW(), INTERVAL -3 DAY) AND NOW()
    </select>

    <!-- 3일 연속 출석 시 추가포인트를 지급하는 Query -->
<!--    <insert id="BonusPoint" parameterType="String">-->
<!--        INSERT INTO POINT (ID, POINT, TYPE, DESCRIPTION, SAVE_DATE, EXPIRE_DATE) VALUES (#{id}, 2000, 'ATTEND', '3일 연속 출석체크 추가 포인트 지급' ,CURDATE(), CURDATE() + INTERVAL 1 YEAR);-->
<!--        UPDATE POINT X INNER JOIN MEMBER Y ON X.ID = Y.ID-->
<!--            SET X.NAME = Y.NAME WHERE Y.ID = #{id};-->
<!--        UPDATE POINT X INNER JOIN MEMBER Y ON X.ID = Y.ID-->
<!--            SET X.PHONE = Y.PHONE WHERE Y.ID = #{id};-->
<!--    </insert>-->

</mapper>